install.packages(c("tidyverse", "corrplot", "GGally", "caret", "rpart", "rpart.plot"), dependencies = TRUE)
iris <- read.csv(url, header = FALSE)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
iris <- read.csv(url, header = FALSE)
View(iris)
names(iris) <- c("c_sepala", "l_sepala", "c_petala", "l_petala", "especie")
View(iris)
iris$especie <- as.factor(gsub("Iris-", "", iris$especie))
View(iris)
summary(iris)
library(corrplot)
library(corrplot)
correlacao <- cor(iris[, -5])
View(correlacao)
corrplot.mixed(correlacao, upper = "ellipse")
library(tidyverse)
theme_set(theme_bw())
ggplot(iris, aes(x = c_petala, y = l_petala)) +
geom_point()
ggplot(iris, aes(x = c_petala, y = l_petala, colour = especie)) +
geom_point()
library(GGally)
ggpairs(iris[, -5], aes(colour = iris$especie))
ggplot(iris, aes(x = c_petala, y = l_petala, colour = especie))
ggplot(iris, aes(x = c_petala, y = l_petala, colour = especie))
ggplot(iris, aes(x = c_petala, y = l_petala, colour = especie)) +
geom_point()
#Insatll required packages
install.packages('caret')
#Import required library
library(caret)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
# Carregando padrão de bibliotecas frequentemente utilizadas
pacotes <- c("plotly", #plataforma gráfica
"tidyverse", #carregar outros pacotes do R
"ggrepel", #geoms de texto e rótulo para 'ggplot2' que ajudam a
#evitar sobreposição de textos
"knitr", "kableExtra", #formatação de tabelas
"reshape2", #função 'melt'
"misc3d", #gráficos 3D
"plot3D", #gráficos 3D
"cluster", #função 'agnes' para elaboração de clusters hierárquicos
"factoextra", #função 'fviz_dend' para construção de dendrogramas
"ade4") #função 'ade4' para matriz de distâncias em var. binárias
## Verifica se as bibliotecas estão instaladas.
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
iris <- read.csv(url, header = FALSE)
iris <- iris[, 1:4]
names(iris) <- c("c_sepala", "l_sepala", "c_petala", "l_petala")
irisExpected <- read.csv(url, header = FALSE)
names(irisExpected) <- c("c_sepala", "l_sepala", "c_petala", "l_petala", "especie")
irisExpected$especie <- as.factor(gsub("Iris-setosa", 1, irisExpected$especie))
irisExpected$especie <- as.factor(gsub("Iris-versicolor", 2, irisExpected$especie))
irisExpected$especie <- as.factor(gsub("Iris-virginica", 3, irisExpected$especie))
matriz_D <- iris %>%
select(c_sepala, l_sepala, c_petala, l_petala) %>%
dist(method = "canberra")
cluster_hier <- agnes(x = matriz_D, method = "complete")
iris$cluster_H <- factor(cutree(tree = cluster_hier, k = 3))
matrizConfusao <- confusionMatrix(data=iris[,5], reference = irisExpected[,5])
matrizConfusao
scatter3D(x=iris$c_sepala,
y=iris$l_sepala,
z=iris$c_petala,
phi = 0, bty = "g", pch = 20, cex = 2,
xlab = "Comprimento Sépala",
ylab = "Largura Sépala",
zlab = "Comprimento Pétala",
main = "Espécies de Iris",
clab = "Comprimento da Sépala")>
text3D(x=iris$c_sepala,
y=iris$l_sepala,
z=iris$c_petala,
labels = rownames(iris),
add = TRUE, cex = 1)
fviz_dend(x = cluster_hier,
k = 3,
k_colors = c("deeppink4", "darkviolet", "deeppink"),
color_labels_by_k = F,
rect = T,
rect_fill = T,
lwd = 1,
ggtheme = theme_bw())
